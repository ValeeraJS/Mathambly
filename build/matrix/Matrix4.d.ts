import IEuler from "../euler/IEuler";
export declare const UNIT_MATRIX4: Float32Array;
export declare const create: () => Float32Array;
export declare const determinant: (a: Float32Array) => number;
export declare const from: (a: Float32Array, out?: Float32Array) => Float32Array;
export declare const fromEuler: (euler: IEuler, out?: Float32Array) => Float32Array;
export declare const fromQuaternion: (q: Float32Array, out: Float32Array) => Float32Array;
export declare const fromRotation: (rad: number, axis: Float32Array, out: Float32Array) => Float32Array | null;
export declare const fromRotationX: (rad: number, out: Float32Array) => Float32Array;
export declare const fromRotationY: (rad: number, out: Float32Array) => Float32Array;
export declare const fromRotationZ: (rad: number, out: Float32Array) => Float32Array;
export declare const fromScaling: (v: Float32Array, out?: Float32Array) => Float32Array;
export declare const fromTranslation: (v: Float32Array, out?: Float32Array) => Float32Array;
export declare const identity: (out?: Float32Array) => Float32Array;
export declare function invert(a: Float32Array, out?: Float32Array): Float32Array | null;
export declare const lookAt: (eye: Float32Array, center: Float32Array, up?: Float32Array, out?: Float32Array) => Float32Array;
export declare const multiply: (a: Float32Array, b: Float32Array, out?: Float32Array) => Float32Array;
export declare const orthogonal: (left: number, right: number, bottom: number, top: number, near: number, far: number, out: Float32Array) => Float32Array;
export declare const perspective: (fovy: number, aspect: number, near: number, far: number, out: Float32Array) => Float32Array;
export declare const rotate: (a: Float32Array, rad: number, axis: Float32Array, out: Float32Array) => Float32Array | null;
export declare const rotateX: (a: Float32Array, rad: number, out: Float32Array) => Float32Array;
export declare const rotateY: (a: Float32Array, rad: number, out: Float32Array) => Float32Array;
export declare const rotateZ: (a: Float32Array, rad: number, out: Float32Array) => Float32Array;
export declare const scale: (a: Float32Array, v: Float32Array, out?: Float32Array) => Float32Array;
export declare const targetTo: (eye: Float32Array, target: Float32Array, up: Float32Array, out?: Float32Array) => Float32Array;
export declare const translate: (a: Float32Array, v: Float32Array, out?: Float32Array) => Float32Array;
export declare const transpose: (a: Float32Array, out?: Float32Array) => Float32Array;
