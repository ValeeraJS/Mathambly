export declare const UNIT_MATRIX3: Float32Array;
export declare const cofactor00: (a: Float32Array) => number;
export declare const cofactor01: (a: Float32Array) => number;
export declare const cofactor02: (a: Float32Array) => number;
export declare const cofactor10: (a: Float32Array) => number;
export declare const cofactor11: (a: Float32Array) => number;
export declare const cofactor12: (a: Float32Array) => number;
export declare const cofactor20: (a: Float32Array) => number;
export declare const cofactor21: (a: Float32Array) => number;
export declare const cofactor22: (a: Float32Array) => number;
export declare const create: () => Float32Array;
export declare const determinant: (a: Float32Array) => number;
export declare const from: (arr: ArrayLike<number>, out?: Float32Array) => Float32Array;
export declare const fromMatrix4: (mat4: Float32Array, out?: Float32Array) => Float32Array;
export declare const fromRotation: (rad: number, out?: Float32Array) => Float32Array;
export declare const fromScaling: (v: Float32Array, out: Float32Array) => Float32Array;
export declare function fromTranslation(v: Float32Array, out?: Float32Array): Float32Array;
export declare const identity: (out?: Float32Array) => Float32Array;
export declare const invert: (a: Float32Array, out: Float32Array) => Float32Array | null;
export declare const multiply: () => (a: Float32Array, b: Float32Array, out?: Float32Array) => Float32Array;
export declare const rotate: (a: Float32Array, rad: number, out?: Float32Array) => Float32Array;
export declare const scale: (a: Float32Array, v: Float32Array, out?: Float32Array) => Float32Array;
export declare const translate: (a: Float32Array, v: Float32Array, out?: Float32Array) => Float32Array;
export declare const transpose: (a: Float32Array, out?: Float32Array) => Float32Array;
