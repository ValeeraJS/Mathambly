import { IPolar } from "../polar";
export declare const add: (a: Float32Array, b: Float32Array, out?: Float32Array) => Float32Array;
export declare const addScalar: (a: Float32Array, b: number, out?: Float32Array) => Float32Array;
export declare const angle: (a: Float32Array) => number;
export declare const ceil: (a: Float32Array, out?: Float32Array) => Float32Array;
export declare const clamp: (a: Float32Array, min: Float32Array, max: Float32Array, out?: Float32Array) => Float32Array;
export declare const clampSafe: (a: Float32Array, min: Float32Array, max: Float32Array, out?: Float32Array) => Float32Array;
export declare const clampLength: (a: Float32Array, min: Float32Array, max: Float32Array, out?: Float32Array) => Float32Array;
export declare const clampScalar: (a: Float32Array, min: number, max: number, out?: Float32Array) => Float32Array;
export declare const closeTo: (a: Float32Array, b: Float32Array, epsilon?: number) => boolean;
export declare const closeToRect: (a: Float32Array, b: Float32Array, epsilon?: number) => boolean;
export declare const closeToManhattan: (a: Float32Array, b: Float32Array, epsilon?: number) => boolean;
export declare const clone: (a: Float32Array, out?: Float32Array) => Float32Array;
export declare const cross: (a: Float32Array, b: Float32Array) => number;
export declare const create: (x: number, y: number, out?: Float32Array) => Float32Array;
export declare const distanceTo: (a: Float32Array, b: Float32Array) => number;
export declare const distanceToManhattan: (a: Float32Array, b: Float32Array) => number;
export declare const distanceToSquared: (a: Float32Array, b: Float32Array) => number;
export declare const divide: (a: Float32Array, b: Float32Array, out?: Float32Array) => Float32Array;
export declare const divideScalar: (a: Float32Array, scalar: number, out?: Float32Array) => Float32Array;
export declare const dot: (a: Float32Array, b: Float32Array) => number;
export declare const equals: (a: Float32Array, b: Float32Array) => boolean;
export declare const floor: (a: Float32Array, out?: Float32Array) => Float32Array;
export declare const floorToZero: (a: Float32Array, out?: Float32Array) => Float32Array;
export declare const from: (a: Float32Array, out?: Float32Array) => Float32Array;
export declare const fromArray: (arr: number[], index?: number, out?: Float32Array) => Float32Array;
export declare const fromJson: (j: {
    x: number;
    y: number;
}, out?: Float32Array) => Float32Array;
export declare const fromPolar: (p: IPolar, out?: Float32Array) => Float32Array;
export declare const fromScalar: (value?: number, out?: Float32Array) => Float32Array;
export declare const inverse: (a: Float32Array, out?: Float32Array) => Float32Array;
export declare const length: (a: Float32Array) => number;
export declare const lengthManhattan: (a: Float32Array) => number;
export declare const lengthSquared: (a: Float32Array) => number;
export declare const lerp: (a: Float32Array, b: Float32Array, alpha: number, out?: Float32Array) => Float32Array;
export declare const max: (a: Float32Array, b: Float32Array, out?: Float32Array) => Float32Array;
export declare const min: (a: Float32Array, b: Float32Array, out?: Float32Array) => Float32Array;
export declare const minus: (a: Float32Array, b: Float32Array, out?: Float32Array) => Float32Array;
export declare const minusScalar: (a: Float32Array, num: number, out?: Float32Array) => Float32Array;
export declare const multiply: (a: Float32Array, b: Float32Array, out?: Float32Array) => Float32Array;
export declare const multiplyScalar: (a: Float32Array, scalar: number, out?: Float32Array) => Float32Array;
export declare const negate: (a: Float32Array, out?: Float32Array) => Float32Array;
export declare const normalize: (a: Float32Array, out?: Float32Array) => Float32Array;
export declare const random: (length?: number, out?: Float32Array) => Float32Array;
export declare const rotate: (a: Float32Array, angle: number, center?: Float32Array, out?: Float32Array) => Float32Array;
export declare const round: (a: Float32Array, out?: Float32Array) => Float32Array;
export declare const set: (x?: number, y?: number, out?: Float32Array) => Float32Array;
export declare const setLength: (a: Float32Array, length: number, out?: Float32Array) => Float32Array;
export declare const toArray: (a: Float32Array, arr?: number[]) => number[];
export declare const toPalorJson: (a: Float32Array, p?: {
    a: number;
    r: number;
}) => IPolar;
export declare const toString: (a: Float32Array) => string;
export declare const transformMatrix3: (a: Float32Array, m: Float32Array, out: Float32Array) => Float32Array;
export declare const VECTOR2_ZERO: Float32Array;
export declare const VECTOR2_TOP: Float32Array;
export declare const VECTOR2_BOTTOM: Float32Array;
export declare const VECTOR2_LEFT: Float32Array;
export declare const VECTOR2_RIGHT: Float32Array;
