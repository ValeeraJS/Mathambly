import IVector4, { IVector4Data } from "./interfaces/IVector4";
import { IMatrix4Data } from "../matrix/interfaces/IMatrix4";
import { IQuaternionData } from "../quaternion/interfaces/IQuaternion";
export default class Vector4 extends Float32Array implements IVector4 {
    readonly isVector4 = true;
    readonly length: 4;
    constructor(x?: number, y?: number, z?: number, w?: number);
    get x(): number;
    set x(val: number);
    get y(): number;
    set y(val: number);
    get z(): number;
    set z(val: number);
    get w(): number;
    set w(val: number);
}
export declare const add: (a: IVector4Data, b: IVector4Data, out?: IVector4Data) => IVector4Data;
export declare function ceil(a: IVector4Data, out?: IVector4Data): IVector4Data;
export declare const closeTo: (a: IVector4Data, b: IVector4Data) => boolean;
export declare const create: (x?: number, y?: number, z?: number, w?: number) => Vector4;
export declare const cross: (u: IVector4Data, v: IVector4Data, w: IVector4Data, out?: IVector4Data) => IVector4Data;
export declare const distanceTo: (a: IVector4Data, b: IVector4Data) => number;
export declare const distanceToSquared: (a: IVector4Data, b: IVector4Data) => number;
export declare const divide: (a: IVector4Data, b: IVector4Data, out?: IVector4Data) => IVector4Data;
export declare const dot: (a: IVector4Data, b: IVector4Data) => number;
export declare const equals: (a: IVector4Data, b: IVector4Data) => boolean;
export declare function floor(a: IVector4Data, out: IVector4Data): IVector4Data;
export declare const from: (a: IVector4Data, out?: IVector4Data) => IVector4Data;
export declare const fromValues: (x: number, y: number, z: number, w: number, out?: IVector4Data) => IVector4Data;
export declare const inverse: (a: IVector4Data, out?: IVector4Data) => IVector4Data;
export declare const length: (a: IVector4Data) => number;
export declare const lengthSquared: (a: IVector4Data) => number;
export declare const lerp: (a: IVector4Data, b: IVector4Data, t: number, out?: IVector4Data) => IVector4Data;
export declare const max: (a: IVector4Data, b: IVector4Data, out?: IVector4Data) => IVector4Data;
export declare const min: (a: IVector4Data, b: IVector4Data, out?: IVector4Data) => IVector4Data;
export declare const minus: (a: IVector4Data, b: IVector4Data, out?: IVector4Data) => IVector4Data;
export declare const multiply: (a: IVector4Data, b: IVector4Data, out?: IVector4Data) => IVector4Data;
export declare const multiplyScalar: (a: IVector4Data, b: number, out?: IVector4Data) => IVector4Data;
export declare const negate: (a: IVector4Data, out?: IVector4Data) => IVector4Data;
export declare const normalize: (a: IVector4Data, out?: IVector4Data) => IVector4Data;
export declare const round: (a: IVector4Data, out?: IVector4Data) => IVector4Data;
export declare function toString(a: IVector4Data): string;
export declare function transformMatrix4(a: IVector4Data, m: IMatrix4Data, out?: IVector4Data): IVector4Data;
export declare const transformQuat: (a: IVector4Data, q: IQuaternionData, out?: IVector4Data) => IVector4Data;
